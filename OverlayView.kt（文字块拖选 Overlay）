package com.example.screentextextractor

import android.content.Context
import android.graphics.*
import android.view.MotionEvent
import android.view.View
import android.widget.Toast
import com.google.mlkit.vision.text.Text

class OverlayView(context: Context, private val textBlocks: List<Text.TextBlock>) : View(context) {

    private val paint = Paint().apply {
        color = Color.argb(50, 0, 150, 136)
        style = Paint.Style.FILL
    }

    private var startX = 0f
    private var startY = 0f
    private var endX = 0f
    private var endY = 0f
    private val selectedTextBlocks = mutableListOf<Text.TextBlock>()

    override fun onDraw(canvas: Canvas) {
        super.onDraw(canvas)
        // 绘制文字块边界
        textBlocks.forEach { block ->
            block.boundingBox?.let { rect ->
                canvas.drawRect(rect, Paint().apply {
                    color = Color.argb(30, 0, 0, 255)
                    style = Paint.Style.FILL
                })
            }
        }
        // 绘制选中区域
        val selRect = RectF(Math.min(startX, endX), Math.min(startY, endY),
                            Math.max(startX, endX), Math.max(startY, endY))
        canvas.drawRect(selRect, paint)
    }

    override fun onTouchEvent(event: MotionEvent): Boolean {
        when(event.action) {
            MotionEvent.ACTION_DOWN -> {
                startX = event.x
                startY = event.y
            }
            MotionEvent.ACTION_MOVE -> {
                endX = event.x
                endY = event.y
                invalidate()
            }
            MotionEvent.ACTION_UP -> {
                endX = event.x
                endY = event.y
                selectTextBlocks()
                invalidate()
            }
        }
        return true
    }

    private fun selectTextBlocks() {
        selectedTextBlocks.clear()
        val selRect = RectF(Math.min(startX, endX), Math.min(startY, endY),
                            Math.max(startX, endX), Math.max(startY, endY))
        textBlocks.forEach { block ->
            block.boundingBox?.let { rect ->
                if (RectF.intersects(selRect, RectF(rect))) {
                    selectedTextBlocks.add(block)
                }
            }
        }
        val selectedText = selectedTextBlocks.joinToString("\n") { it.text }
        ClipboardManagerCompat.copyText(context, selectedText)
        Toast.makeText(context, "文字已复制", Toast.LENGTH_SHORT).show()
    }
}
